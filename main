import tkinter as tk
from tkinter import messagebox
import pyautogui
import time
from datetime import datetime
import threading


class ScreenshotApp:
    def __init__(self, root):
        self.root = root
        self.is_running = False
        self.interval = 5  # Interval between screenshots in seconds

        self.root.title("Screenshot App")
        self.root.geometry("300x120")
        self.root.resizable(False, False)

        self.start_button = tk.Button(self.root, text="Start Capturing", command=self.start_capturing)
        self.start_button.pack(pady=10)

        self.stop_button = tk.Button(self.root, text="Stop Capturing", command=self.stop_capturing, state=tk.DISABLED)
        self.stop_button.pack(pady=10)

    def take_screenshots(self):
        try:
            while self.is_running:
                timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
                filename = f"screenshot_{timestamp}.png"
                screenshot = pyautogui.screenshot()
                screenshot.save(filename)
                print(f"Screenshot saved as {filename}")
                time.sleep(self.interval)
        except Exception as e:
            messagebox.showerror("Error", f"An error occurred: {e}")

    def start_capturing(self):
        if not self.is_running:
            self.is_running = True
            self.start_button.config(state=tk.DISABLED)
            self.stop_button.config(state=tk.NORMAL)
            threading.Thread(target=self.take_screenshots, daemon=True).start()

    def stop_capturing(self):
        self.is_running = False
        self.start_button.config(state=tk.NORMAL)
        self.stop_button.config(state=tk.DISABLED)


if __name__ == "__main__":
    root = tk.Tk()
    app = ScreenshotApp(root)
    root.mainloop()
